stages:
  - build
  - test
  - release
  - deploy

include:
  - template: Security/SAST.gitlab-ci.yml
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

build-frontend-code-job:
  stage: build
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd frontend
    - >
      docker build
      --build-arg VERSION=$VERSION
      --tag $CI_REGISTRY_IMAGE/momo-frontend:$CI_COMMIT_SHA
      .
    - docker push $CI_REGISTRY_IMAGE/momo-frontend:$CI_COMMIT_SHA
  only:
    changes:
      - frontend/**/*

spotbugs-sast:
  stage: test
  dependencies:
    - build-frontend-code-job
  artifacts:
    reports:
      sast: gl-sast-report.json

upload-frontend-release:
  stage: release
  variables:
    GIT_STRATEGY: none
  image: docker:20.10.12-dind-rootless
  dependencies:
    - spotbugs-sast
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/momo-frontend:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE/momo-frontend:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/momo-frontend:latest
    - docker push $CI_REGISTRY_IMAGE/momo-frontend:latest

deploy:
  stage: deploy
  image: alpine/k8s:1.24.16
  environment:
    name: k8s
    url: https://devops-zimin.shop
  needs:
    - upload-frontend-release
  when: manual
  before_script:
    - mkdir -p ~/.kube
    - chmod 700 ~/.kube
    - cat "$KUBE_CONFIG" >> ~/.kube/config
    - cat "$KUBCERT" >> ~/.kube/ca.pem
    - chmod 644 ~/.kube/config
  script:
    - kubectl config set-context default --namespace=default
    - kubectl apply -f kubernetes/frontend
  after_script:
    - rm ~/.kube/config
  only:
    - branches
  except:
    - main

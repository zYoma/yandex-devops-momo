stages:
  - build
  - test
  - release
  - deploy

include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

build-frontend-code-job:
  stage: build
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd frontend
    - >
      docker build
      --build-arg VERSION=$VERSION
      --tag $CI_REGISTRY_IMAGE/momo:$CI_COMMIT_SHA
      .
    - docker push $CI_REGISTRY_IMAGE/momo:$CI_COMMIT_SHA
  only:
    changes:
      - frontend/**/*

sonarqube-frontend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli
  script:
    - cd frontend
    - >
      sonar-scanner -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_FRONTEND}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN_FRONTEND}
  dependencies:
    - build-frontend-code-job

upload-frontend-release:
  stage: release
  variables:
    GIT_STRATEGY: none
  image: docker:20.10.12-dind-rootless
  needs:
    - sonarqube-frontend-sast
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/momo:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE/momo:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/momo:latest
    - docker push $CI_REGISTRY_IMAGE/momo:latest

deploy:
  stage: deploy
  image: alpine:3.15.0
  before_script:
    - apk add openssh-client bash
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - echo "$SSH_PRIVATE_KEY" >> ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - scp -i ~/.ssh/id_rsa docker-compose.yml ${DEV_USER}@${DEV_HOST}:/home/student
  script:
    - ssh ${DEV_USER}@${DEV_HOST}
      "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY;
      docker pull $CI_REGISTRY_IMAGE/momo:latest;
      export "CURRENT_VERSION=${VERSION}";
      export "VERSION=${VERSION}";
      export "DEV_HOST=${DEV_HOST}";
      setsid /bin/bash -s " < ./frontend/frontend_deploy.sh
  needs:
    - upload-frontend-release
  when: manual
  environment:
    name: frontend/$CI_COMMIT_REF_NAME
    url: http://std-017-03.praktikum-services.tech
  only:
    - branches
  except:
    - main
